{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\nconst apiHost = process.env.REACT_APP_API_HOST;\nexport const jokeService = createApi({\n  reducerPath: 'jokeAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `http://${apiHost}/joke`\n  }),\n  endpoints: build => ({\n    createJoke: build.mutation({\n      query: joke => {\n        const token = localStorage.getItem('userToken');\n        return {\n          url: `/create`,\n          method: 'POST',\n          headers: {\n            authorization: `${token}`\n          },\n          body: joke\n        };\n      }\n    }),\n    deleteJoke: build.mutation({\n      query: id => {\n        const token = localStorage.getItem('userToken');\n        return {\n          url: `/delete`,\n          method: 'DELETE',\n          headers: {\n            authorization: `${token}`\n          },\n          body: id\n        };\n      }\n    }),\n    addJokeToFavorites: build.mutation({\n      query: (name, id) => {\n        const token = localStorage.getItem('userToken');\n        return {\n          url: `/addToFavorites`,\n          method: 'PUT',\n          headers: {\n            authorization: `${token}`\n          }\n        };\n      }\n    }),\n    removeJokeFromFavorites: build.mutation({\n      query: (name, id) => {\n        const token = localStorage.getItem('userToken');\n        return {\n          url: `/removeFromFavorites`,\n          method: 'PUT',\n          headers: {\n            authorization: `${token}`\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useCreateJokeMutation,\n  useDeleteJokeMutation,\n  useAddJokeToFavoritesMutation,\n  useRemoveJokeFromFavoritesMutation\n} = jokeService;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiHost","process","env","REACT_APP_API_HOST","jokeService","reducerPath","baseQuery","baseUrl","endpoints","build","createJoke","mutation","query","joke","token","localStorage","getItem","url","method","headers","authorization","body","deleteJoke","id","addJokeToFavorites","name","removeJokeFromFavorites","useCreateJokeMutation","useDeleteJokeMutation","useAddJokeToFavoritesMutation","useRemoveJokeFromFavoritesMutation"],"sources":["/home/ivan/working/DBMS_TASK/frontend/src/services/Joke.js"],"sourcesContent":["import {createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react'\n\nconst apiHost = process.env.REACT_APP_API_HOST;\n\n\nexport const jokeService = createApi({\n    reducerPath: 'jokeAPI',\n    baseQuery: fetchBaseQuery({ baseUrl: `http://${apiHost}/joke`}),\n    endpoints: (build) => ({\n        createJoke: build.mutation({\n            query: (joke) => {\n                const token = localStorage.getItem('userToken');\n                return {\n                    url: `/create`,\n                    method: 'POST',\n                    headers: { authorization: `${token}`},\n                    body: joke\n                };\n            },\n        }),\n        deleteJoke: build.mutation({\n            query: (id) => {\n                const token = localStorage.getItem('userToken');\n                return {\n                    url: `/delete`,\n                    method: 'DELETE',\n                    headers: {authorization: `${token}`},\n                    body: id\n                }\n            },\n        }),\n        addJokeToFavorites: build.mutation({\n            query: (name, id) => {\n                const token = localStorage.getItem('userToken');\n                return {\n                    url: `/addToFavorites`,\n                    method: 'PUT',\n                    headers: {authorization: `${token}`},\n                }\n            }\n        }),\n        removeJokeFromFavorites: build.mutation({\n            query: (name, id) => {\n                const token = localStorage.getItem('userToken');\n                return {\n                    url: `/removeFromFavorites`,\n                    method: 'PUT',\n                    headers: {authorization: `${token}`},\n                }\n            }\n        })\n    })\n})\n\n\nexport const {\n    useCreateJokeMutation,\n    useDeleteJokeMutation,\n    useAddJokeToFavoritesMutation,\n    useRemoveJokeFromFavoritesMutation,\n} = jokeService;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAQ,mCAAmC;AAE5E,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;AAG9C,OAAO,MAAMC,WAAW,GAAGN,SAAS,CAAC;EACjCO,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEP,cAAc,CAAC;IAAEQ,OAAO,EAAG,UAASP,OAAQ;EAAM,CAAC,CAAC;EAC/DQ,SAAS,EAAGC,KAAK,KAAM;IACnBC,UAAU,EAAED,KAAK,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAGC,IAAI,IAAK;QACb,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,OAAO;UACHC,GAAG,EAAG,SAAQ;UACdC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAEC,aAAa,EAAG,GAAEN,KAAM;UAAC,CAAC;UACrCO,IAAI,EAAER;QACV,CAAC;MACL;IACJ,CAAC,CAAC;IACFS,UAAU,EAAEb,KAAK,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAGW,EAAE,IAAK;QACX,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,OAAO;UACHC,GAAG,EAAG,SAAQ;UACdC,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YAACC,aAAa,EAAG,GAAEN,KAAM;UAAC,CAAC;UACpCO,IAAI,EAAEE;QACV,CAAC;MACL;IACJ,CAAC,CAAC;IACFC,kBAAkB,EAAEf,KAAK,CAACE,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAACa,IAAI,EAAEF,EAAE,KAAK;QACjB,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,OAAO;UACHC,GAAG,EAAG,iBAAgB;UACtBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAACC,aAAa,EAAG,GAAEN,KAAM;UAAC;QACvC,CAAC;MACL;IACJ,CAAC,CAAC;IACFY,uBAAuB,EAAEjB,KAAK,CAACE,QAAQ,CAAC;MACpCC,KAAK,EAAE,CAACa,IAAI,EAAEF,EAAE,KAAK;QACjB,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,OAAO;UACHC,GAAG,EAAG,sBAAqB;UAC3BC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAACC,aAAa,EAAG,GAAEN,KAAM;UAAC;QACvC,CAAC;MACL;IACJ,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAGF,OAAO,MAAM;EACTa,qBAAqB;EACrBC,qBAAqB;EACrBC,6BAA6B;EAC7BC;AACJ,CAAC,GAAG1B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}