{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nconst authEndpoint = process.env.REACT_APP_VKAUTH_URI;\nconst clientId = process.env.REACT_APP_CLIENT_ID;\nconst redirectUri = process.env.REACT_APP_REDIRECT_URI;\nconst littleBoyPort = process.env.REACT_APP_LITTLE_BOY_PORT;\nconst littleBoyHost = process.env.REACT_APP_LITTLE_BOY_HOST;\nconst apiHost = process.env.REACT_APP_API_HOST;\nexport const getAuthorizeCodeHref = redirect => {\n  const display = 'page';\n  const response_type = 'code';\n  const state = 4194308;\n  // eslint-disable-next-line max-len\n  return `${authEndpoint}/authorize?client_id=${clientId}&display=${display}&redirect_uri=${redirectUri}&response_type=${response_type}&v=5.120&state=${state}`;\n};\nexport const getCode = () => {\n  const urlParams = getUrlParams();\n  const code = urlParams.code;\n  removeParamsFromUrl();\n  return {\n    payload: code\n  };\n};\nexport const getAccessToken = createAsyncThunk('auth/access_token', async (_, _ref) => {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref;\n  try {\n    const code = getState().VkAuth.code;\n    const response = await fetch(`http://${littleBoyHost}:${littleBoyPort}/access_token?code=${code}`);\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue('Не удалось получить Access Token');\n  }\n});\nexport const getJWToken = createAsyncThunk('auth/JWToken', async function (_, _ref2) {\n  let {\n    getState,\n    rejectWithValue\n  } = _ref2;\n  try {\n    const accessToken = getState().VkAuth.accessToken;\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify({\n        AuthToken: accessToken\n      })\n    };\n    const response = await fetch(`http://${apiHost}/auth/vk`, settings);\n    return await response.json();\n  } catch (error) {\n    return rejectWithValue('Не удалось получить JWT');\n  }\n});\nexport const getUserInfo = createAsyncThunk('auth/userInfo', async function (_, _ref3) {\n  let {\n    rejectWithValue\n  } = _ref3;\n  const token = localStorage.getItem('userToken');\n  const settings = {\n    method: 'GET',\n    headers: {\n      authorization: `${token}`\n    }\n  };\n  const response = await fetch(`http://${apiHost}/users/current`, settings).then(response => response.json());\n  if (response.error) {\n    localStorage.removeItem('userToken');\n    return rejectWithValue(response);\n  }\n  return await response;\n});","map":{"version":3,"names":["createAsyncThunk","authEndpoint","process","env","REACT_APP_VKAUTH_URI","clientId","REACT_APP_CLIENT_ID","redirectUri","REACT_APP_REDIRECT_URI","littleBoyPort","REACT_APP_LITTLE_BOY_PORT","littleBoyHost","REACT_APP_LITTLE_BOY_HOST","apiHost","REACT_APP_API_HOST","getAuthorizeCodeHref","redirect","display","response_type","state","getCode","urlParams","getUrlParams","code","removeParamsFromUrl","payload","getAccessToken","_","getState","rejectWithValue","VkAuth","response","fetch","json","error","getJWToken","accessToken","settings","method","body","JSON","stringify","AuthToken","getUserInfo","token","localStorage","getItem","headers","authorization","then","removeItem"],"sources":["/home/ivan/working/DBMS_TASK/frontend/src/store/actions/auth.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst authEndpoint = process.env.REACT_APP_VKAUTH_URI;\nconst clientId = process.env.REACT_APP_CLIENT_ID;\nconst redirectUri = process.env.REACT_APP_REDIRECT_URI;\nconst littleBoyPort = process.env.REACT_APP_LITTLE_BOY_PORT;\nconst littleBoyHost = process.env.REACT_APP_LITTLE_BOY_HOST;\nconst apiHost = process.env.REACT_APP_API_HOST;\n\nexport const getAuthorizeCodeHref = (redirect) => {\n    const display = 'page';\n    const response_type = 'code';\n    const state = 4194308;\n    // eslint-disable-next-line max-len\n    return `${authEndpoint}/authorize?client_id=${clientId}&display=${display}&redirect_uri=${redirectUri}&response_type=${response_type}&v=5.120&state=${state}`;\n};\n\nexport const getCode = () => {\n    const urlParams = getUrlParams();\n    const code = urlParams.code;\n    removeParamsFromUrl();\n    return { payload: code };\n};\n\n\nexport const getAccessToken = createAsyncThunk(\n    'auth/access_token',\n    async (_, { getState, rejectWithValue }) => {\n        try {\n            const code = getState().VkAuth.code;\n            const response = await fetch(`http://${littleBoyHost}:${littleBoyPort}/access_token?code=${code}`);\n            return (await response.json());\n        } catch (error) {\n            return rejectWithValue('Не удалось получить Access Token');\n        }\n    }\n);\n\n\nexport const getJWToken = createAsyncThunk(\n    'auth/JWToken',\n    async function (_, { getState, rejectWithValue }) {\n        try {\n            const accessToken = getState().VkAuth.accessToken;\n            const settings = {\n                method: 'POST',\n                body: JSON.stringify({\n                    AuthToken: accessToken\n                })\n            };\n\n            const response = await fetch(`http://${apiHost}/auth/vk`, settings);\n            return (await response.json());\n        } catch (error) {\n            return rejectWithValue('Не удалось получить JWT');\n        }\n    }\n);\n\n\nexport const getUserInfo = createAsyncThunk('auth/userInfo', async function (_, { rejectWithValue }) {\n    const token = localStorage.getItem('userToken');\n    const settings = {\n        method: 'GET',\n        headers: { authorization: `${token}` }\n    };\n\n    const response = await fetch(`http://${apiHost}/users/current`, settings).then((response) => response.json());\n\n    if (response.error) {\n        localStorage.removeItem('userToken');\n        return rejectWithValue(response);\n    }\n\n    return (await response);\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}